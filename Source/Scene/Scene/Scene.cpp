#include "Scene.h"

//シーン構造体
SceneData Scene::m_nowSceneData;
SceneData Scene::m_prevSceneData;

//サブシーンのためのスタック
std::stack<SceneData> Scene::m_stkScene;

//複数のシーンで共用するデータ構造体
Common::CommonData Scene::m_gameData;

//=============================================================================
// コンストラクタ
//=============================================================================
SceneData::SceneData()
	: m_scene(0)
	, m_bSubScene(false)
	, m_pPrevScene(nullptr)
{

}

//=============================================================================
// データのセット
// 引　数：const int    シーン定数
// 　　　　const bool   サブシーンかどうか
// 　　　　const Scene* サブシーンへ飛ぶ場合に前のシーンのポインタを格納する
//=============================================================================
void SceneData::Set(const int scene, const bool bSubScene, Scene* const pPrevScene)
{
	m_scene = scene;
	m_bSubScene = bSubScene;
	m_pPrevScene = pPrevScene;
}

//=============================================================================
// 現在のシーンの取得
// 戻り値：int シーン定数
//=============================================================================
int SceneData::GetNowScene() const
{
	return m_scene;
}


//=============================================================================
// コンストラクタ
// 引　数：Engine* エンジンクラスのアドレス
//=============================================================================
Scene::Scene()
	: m_bStart(true)
	, m_bEnd(false)
{

}

//=============================================================================
// 仮想デストラクタ
//=============================================================================
Scene::~Scene()
{
	Exit();
}

//=============================================================================
// Run関数内で実行される終了処理用関数（純粋仮想関数）
//=============================================================================
void Scene::Exit()
{

}

#ifdef USE_IMGUI
//=============================================================================
// Run関数内で実行されるImGuiフレーム処理用関数（仮想関数）
//=============================================================================
void Scene::ImGuiFrameProcess()
{

}
#endif

//=============================================================================
// サブシーンから戻った際に終了フラグを戻す関数
// 備　考：Game.cppのRun関数内でしか使わないので呼び出さない事
//=============================================================================
void Scene::ReturnSubScene()
{
	m_bEnd = false;
}

//=============================================================================
// シーン処理の実行
//=============================================================================
bool Scene::Run()
{
	if (m_bStart) {
		Start();
		m_bStart = false;
	}

	g_Engine->Update();

	Update();

	g_Engine->LateUpdate();

	g_Engine->Begin3DRender();

	g_Engine->ModelRender();

	g_Engine->Begin2DRender();

	Draw();

	g_Engine->EndRender();

	if (m_nowSceneData.m_scene != m_prevSceneData.m_scene) {
		m_bEnd = true;
	}

	return m_bEnd;
}
